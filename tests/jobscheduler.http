### Request Access Token
###
### Be aware that the OAuth Flow is not supported by the Jobscheduler Plan lite
### which is available in the SAP BTP Trial Account.
###
### The OAuth Flow is only supported by the Jobscheduler Plan standard!
###
# @name requestAccessToken
POST {{$dotenv jobscheduler_tokenendpoint}}/oauth/token
Accept: application/json
Authorization: Basic {{$dotenv jobschedulerclientid}}:{{$dotenv jobschedulerclientsecret}}
Content-Type: application/x-www-form-urlencoded

grant_type=client_credentials

### Fill Variables from Response
@access_token={{requestAccessToken.response.body.$.access_token}}
###
### Use Job Scheduler REST API
###
GET {{$dotenv schedulerUrl}}/scheduler/
Authorization: Bearer {{access_token}}
###
# @name getJobs
GET {{$dotenv schedulerUrl}}/scheduler/jobs
Authorization: bearer {{access_token}}
###
@jobIdRest = {{getJobs.response.body.results[0].jobId}}
###
# @name getJobSchedule
GET {{$dotenv schedulerUrl}}/scheduler/jobs/{{jobIdRest}}/schedules
Authorization: bearer {{access_token}}
###
@scheduleIdRest = {{getJobSchedule.response.body.results[0].scheduleId}}
###
GET {{$dotenv schedulerUrl}}/scheduler/jobs/{{jobIdRest}}/schedules/{{scheduleIdRest}}
Authorization: bearer {{access_token}}
### Schedule Task
PUT  {{$dotenv schedulerUrl}}/scheduler/jobs/{{jobIdRest}}/schedules/{{scheduleIdRest}}
Authorization: bearer {{access_token}}
Content-Type: application/json

{
  "active": true
}
### Use CAP Wrapper 

### Read Jobs
# @name readJobs
GET http://localhost:4004/odata/v4/admin/readJobs()
Authorization: Basic admin:

### Fill Variables from Response
@jobId = {{readJobs.response.body.value[0].jobId}}

### Read Job
# @name readJob
GET http://localhost:4004/odata/v4/admin/readJobDetails(jobId={{jobId}})
Authorization: Basic admin:

### Read Job Action Logs
# @name readJobActionLogs
GET http://localhost:4004/odata/v4/admin/readJobActionLogs(jobId={{jobId}})
Authorization: Basic admin:

### Read Job Schedules
# @name readSchedules
GET http://localhost:4004/odata/v4/admin/readJobSchedules(jobId={{jobId}})
Authorization: Basic admin:

### Fill Variables from Response
@scheduleId = {{readSchedules.response.body.value[0].scheduleId}}


### Read Job Run Logs
# @name readJobRunLogs
GET http://localhost:4004/odata/v4/admin/readJobRunLogs(jobId={{jobId}},scheduleId='{{scheduleId}}',page_size=200,offset=0)
Authorization: Basic admin:

### Update Job Schedule
# @name updateJobSchedule
POST http://localhost:4004/odata/v4/admin/updateJobSchedule
Authorization: Basic admin:
Content-Type: application/json

{
  "jobId": {{jobId}},
  "scheduleId": "{{scheduleId}}",
  "schedule": {
    "active": true
  }
}

### Create Job
# @name createJob
POST http://localhost:4004/odata/v4/admin/createJob
Authorization: Basic admin:
Content-Type: application/json

{
  "url": "{{$dotenv url}}/odata/v2/order/Orders_checkConsistencyInline?ID=guid'64e718c9-ff99-47f1-8ca3-950c850777d4'&IsActiveEntity=true",
  "cron": "* * * * * */5 0"
}

### Fill Variables from Response
#@jobId = {{createJob.response.body.value}}
@active=true
### Update Job
POST http://localhost:4004/odata/v4/admin/updateJob
Authorization: Basic admin:
Content-Type: application/json

{
  "jobId": {{jobId}},
  "active": {{active}}
}

### Delete Job
POST http://localhost:4004/odata/v4/admin/deleteJob
Authorization: Basic admin:
Content-Type: application/json

{
  "jobId": {{jobId}}
}
