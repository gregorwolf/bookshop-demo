### Read Metadata via OData V2
GET http://localhost:4004/odata/v2/order/$metadata
Authorization: Basic admin:
### Read Metadata via OData V4
GET http://localhost:4004/odata/v4/order/$metadata
Authorization: Basic admin:
### Read Orders via OData
# @name orders
GET http://localhost:4004/odata/v4/order/Orders
  ?$expand=ShippingAddress,Items,orderstatus,tags($expand=tag)
  &$orderby=OrderNo
Authorization: Basic admin:
### Fill Variables from Response
@orderID = {{orders.response.body.$.value[0].ID}}
###
GET http://localhost:4004/odata/v4/order/Orders(ID={{orderID}},IsActiveEntity=true)
  ?$expand=ShippingAddress,Items
Authorization: Basic admin:
###
# Test for cds.fiori.bypass_draft = true
# https://cap.cloud.sap/docs/releases/dec23#sapui5-mass-edit
PATCH http://localhost:4004/odata/v4/order/Orders(ID={{orderID}},IsActiveEntity=true)
Authorization: Basic admin:
Content-Type: application/json

{
  "employeeOrder": true
}
###
GET http://localhost:4004/odata/v4/order/OrderItems
  ?$filter=parent_ID eq {{orderID}}
Authorization: Basic admin:
###
GET http://localhost:4004/odata/v4/order/OrderShippingAddress
#  ?$filter=parent_ID eq {{orderID}}
Authorization: Basic admin:
### Create Order
# @name order
POST http://localhost:4004/odata/v4/order/Orders
Authorization: Basic admin:
Content-Type: application/json

{
  "OrderNo": "4711",
  "salesOrganization": "1000",
  "orderstatus_code": "N",
  "deliverystatus_code": "N",
  "ShippingAddress": {
    "city": "Walldorf",
    "street": "Hasso-Plattner-Ring 1"
  },
  "Items": [
    {
      "itemNo": 10,
      "book_ID": 201,
      "amount": 1
    }
  ]
}
### Create Order with draft
# @name order
POST http://localhost:4004/odata/v4/order/Orders
Authorization: Basic admin:
Content-Type: application/json

{
  "OrderNo": "4711",
  "IsActiveEntity": false,
  "ShippingAddress": {
    "city": "Walldorf"
  },
  "Items": [
    {
      "itemNo": 10,
      "book_ID": 201,
      "product": "CM-003024",
      "amount": 1
    }
  ]
}
###
@location = {{order.response.headers.Location}}
@newOrderID = {{order.response.body.ID}}
@ShippingAddressID = {{order.response.body.ShippingAddress_ID}}
###
GET http://localhost:4004/odata/v4/order/{{location}}
  ?$expand=ShippingAddress,Items
Authorization: Basic admin:
###
POST http://localhost:4004/odata/v4/order/{{location}}/OrderService.draftPrepare
Authorization: Basic admin:
Content-Type: application/json

{"SideEffectsQualifier":""}

###
POST http://localhost:4004/odata/v4/order/{{location}}/OrderService.draftActivate
Authorization: Basic admin:
Content-Type: application/json

{}

###
PATCH http://localhost:4004/odata/v4/order/{{location}}
Authorization: Basic admin:
Content-Type: application/json

{
  "salesOrganization": "1000",
  "orderstatus_code": "N",
  "deliverystatus_code": "N"
}
###
PATCH http://localhost:4004/odata/v4/order/OrderShippingAddress(ID={{ShippingAddressID}},IsActiveEntity=false)
Authorization: Basic admin:
Content-Type: application/json

{
  "street": "Hasso-Plattner-Ring 1"
}
###
GET http://localhost:4004/odata/v4/order/Orders(ID={{newOrderID}},IsActiveEntity=false)
  ?$expand=ShippingAddress,Items
Authorization: Basic admin:
###
DELETE http://localhost:4004/odata/v4/order/Orders(ID={{orderID}},IsActiveEntity=true)
Authorization: Basic admin:
### Delete using an action
POST http://localhost:4004/odata/v4/order/Orders(ID={{orderID}},IsActiveEntity=true)/deleteOrder
Authorization: Basic admin:
Content-Type: application/json

{}
### Delete Items an action
POST http://localhost:4004/odata/v4/order/Orders(ID={{orderID}},IsActiveEntity=true)/deleteOrderItems
Authorization: Basic admin:
Content-Type: application/json

{}
### Read Orders via OData V4
GET http://localhost:4004/odata/v4/order/Orders
Authorization: Basic admin:

### Read Orders via OData V2
GET http://localhost:4004/v2/admin/Orders
Authorization: Basic admin:

### Read Order Items via OData V2
GET http://localhost:4004/v2/admin/Orders(ID=guid'7e2f2640-6866-4dcf-8f4d-3027aa831cad',IsActiveEntity=true)/Items
Authorization: Basic admin:

### Order Consistency Check via OData V4
POST http://localhost:4004/odata/v4/order/Orders(ID=64e718c9-ff99-47f1-8ca3-950c850777d4,IsActiveEntity=true)/OrderService.checkConsistencyInline
Authorization: Basic admin:
Accept: application/json
Content-Type: application/json
x-sap-job-id: 5

{}

### Order Consistency Check via OData V2
POST http://localhost:4004/v2/admin/Orders_checkConsistencyInline?ID=guid'64e718c9-ff99-47f1-8ca3-950c850777d4'&IsActiveEntity=true
Authorization: Basic admin:
Accept: application/json
Content-Type: application/json
x-sap-job-id: 5

{}

### Order Consistency Check via OData V2
POST {{$dotenv url}}/v2/admin/Orders_checkConsistencyInline?ID=guid'64e718c9-ff99-47f1-8ca3-950c850777d4'&IsActiveEntity=true
Authorization: Bearer {{$dotenv bearer}}
Accept: application/json
Content-Type: application/json

{}
### parameterized view
GET http://localhost:4004/odata/v4/order/OrderReport('EUR')/Set
Authorization: Basic admin:
### what is the correct path to read a single entity of a parameterized view?
GET http://localhost:4004/odata/v4/order/OrderReport(currency='EUR')/Set(7e2f2640-6866-4dcf-8f4d-3027aa831cad)
Authorization: Basic admin:
###
GET http://localhost:4004/odata/v2/order/OrderReport('EUR')/Set
Authorization: Basic admin:
### Call Bound action
POST http://localhost:4004/odata/v4/order/OrderReport(currency='EUR')/Set(7e2f2640-6866-4dcf-8f4d-3027aa831cad)/OrderService.checkConsistencyWithParams
Authorization: Basic admin:
Content-Type: application/json

{}
### This path works for OData V2
GET http://localhost:4004/odata/v2/order/OrderReportSet(currency='EUR',ID=guid'64e718c9-ff99-47f1-8ca3-950c850777d4')
Authorization: Basic admin:
