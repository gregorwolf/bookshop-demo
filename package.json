{
  "name": "bookshop-demo",
  "version": "1.0.0",
  "description": "A simple bookshop application, build in a self-contained all-in-one fashion, i.e. w/o reusing other packages.",
  "repository": "https://github.com/gregorwolf/bookshop-demo.git",
  "license": "ISC",
  "engines": {
    "node": "^16"
  },
  "files": [
    "db",
    "srv"
  ],
  "dependencies": {
    "@sap-cloud-sdk/core": "^1.54.2",
    "@sap-cloud-sdk/http-client": "^2.10.0",
    "@sap-cloud-sdk/util": "^2.10.0",
    "@sap/cds": "^6.3.1",
    "@sap/cds-dk": "6.3.1",
    "@sap/cds-odata-v2-adapter-proxy": "^1.9.15",
    "@sap/jobs-client": "^1.7.42",
    "@sap/logging": "^6.1.3",
    "@sap/xsenv": "^3.4.0",
    "@sap/xssec": "^3.2.14",
    "async-retry": "^1.3.3",
    "cf-http-client": "^1.3.0",
    "cmis": "^1.0.3",
    "compression": "^1.7.4",
    "express": "^4.18.2",
    "form-data": "^4.0.0",
    "hdb": "^0.19.5",
    "helmet": "^5.1.1",
    "mqtt": "^4.3.7",
    "mysql": "^2.18.1",
    "passport": "^0.6.0",
    "sap-cf-mailer": "^0.0.5"
  },
  "devDependencies": {
    "@openui5/ts-types": "^1.108.0",
    "@sap/cds-lsp": "^6.3.0",
    "artillery": "^1.7.9",
    "cds-swagger-ui-express": "^0.5.0",
    "chai": "^4.3.7",
    "chai-as-promised": "^7.1.1",
    "chai-subset": "^1.6.0",
    "copyfiles": "2.4.1",
    "express-status-monitor": "^1.3.4",
    "jest": "^29.3.1",
    "npm-run-all": "^4.1.5",
    "response-time": "^2.3.2",
    "sqlite3": "^5.1.2",
    "supertest": "^6.3.1"
  },
  "scripts": {
    "setup": "run-s deploy:sqlite:** build start",
    "update": "run-p update:**",
    "update:root": "npm update",
    "update:app": "cd app && npm update",
    "update:approuter": "cd approuter && npm update",
    "update:standalone-v2-proxy": "cd standalone-v2-proxy && npm update",
    "deploy:sqlite:bookshop": "cds deploy --to sqlite:db/bookshop.db --no-save",
    "deploy:sqlite:instance:1": "cds deploy --to sqlite:instance1.db --no-save",
    "deploy:sqlite:instance:2": "cds deploy --to sqlite:instance2.db --no-save",
    "deploy:cf": "cf deploy mta_archives/bookshop-demo_0.0.1.mtar -e cf.mtaext --retries 0",
    "deploy:cf:trial": "cf deploy mta_archives/bookshop-demo_0.0.1.mtar -e cf-trial.mtaext --retries 0",
    "deploy:cf:ui": "cf deploy mta_archives/bookshop-demo_0.0.1.mtar -e cf.mtaext -m bookshop-demo-deployer --retries 0",
    "deploy:cf:srv": "cf deploy mta_archives/bookshop-demo_0.0.1.mtar -e cf.mtaext -m bookshop-demo-srv --retries 0",
    "deploy:cf:app": "cf deploy mta_archives/bookshop-demo_0.0.1.mtar -e cf.mtaext -m bookshop-demo-ui --retries 0",
    "deploy:cf-hana-cloud": "cf deploy mta_archives/bookshop-demo_0.0.1.mtar -e cf-hana-cloud.mtaext --retries 0",
    "deploy:cf-hana-cloud-job-standard": "cf deploy mta_archives/bookshop-demo_0.0.1.mtar -e cf-hana-cloud-job-standard.mtaext --retries 0",
    "deploy:hana": "cds deploy --to hana --auto-undeploy --profile hybrid",
    "deploy:hana:instance:1": "cds deploy --to hana:bookshop-demo-db-instance1 --auto-undeploy --profile hybrid-instance1",
    "deploy:hana:instance:2": "cds deploy --to hana:bookshop-demo-db-instance2 --auto-undeploy --profile hybrid-instance2",
    "deploy:xsa:hana": "NODE_ENV=hybrid cds deploy --to hana --vcap-file ./default-env.json --auto-undeploy",
    "deploy:xsa": "xs deploy mta_archives/bookshop-demo_0.0.1.mtar",
    "bind:hana": "cds bind -2 bookshop-demo-db --profile hybrid",
    "bind:uaa": "cds bind uaa --to bookshop-demo-uaa --kind xsuaa --profile hybrid",
    "bind:keyuser": "cds bind keyuser --to bookshop-demo-ui5-flexibility-keyuser --kind ui5-flexibility-keyuser --profile hybrid",
    "create:xsa:uaa": "xs create-service xsuaa space bookshop-demo-uaa -c xs-security.json",
    "create:uaa-service-key": "xs create-service-key bookshop-demo-uaa dev",
    "get:uaa-service-key": "xs service-key bookshop-demo-uaa dev",
    "create:cf-uaa-service-key": "cf create-service-key bookshop-demo-uaa dev",
    "get:cf-uaa-service-key": "cf service-key bookshop-demo-uaa dev",
    "create:hdi-shared": "xs create-service hana hdi-shared bookshop-demo-db-service",
    "create:hdi-service-key": "xs create-service-key bookshop-demo-db-service dev",
    "get:hdi-service-key": "xs service-key bookshop-demo-db-service dev",
    "create:cf-hdi-service-key": "cf create-service-key bookshop-demo-db-service dev",
    "get:cf-hdi-service-key": "cf service-key bookshop-demo-db-service dev",
    "build": "run-s build:clean build:copycsntoproxy",
    "build:clean": "cds build/all --clean",
    "build:xs-security": "cds compile srv/ --to xsuaa > xs-security.json",
    "build:cf": "cp mta-cf.yaml mta.yaml && mbt build -p=cf && rm mta.yaml",
    "build:xsa": "cp mta-xsa.yaml mta.yaml && mbt build -p=xsa && rm mta.yaml",
    "build:standalone": "cp mta-standAlone.yaml mta.yaml && mbt build -p=xsa && rm mta.yaml",
    "build:copycsntoproxy": "copyfiles -f gen/srv/srv/csn.json standalone-v2-proxy/gen/",
    "debug": "node --inspect node_modules/@sap/cds/bin/cds.js run",
    "start": "cds run",
    "start:app": "cds bind --exec -- npm run start-repo-mock --prefix app --profile hybrid",
    "start:hana": "cds bind --exec -- cds run --profile hybrid",
    "start:hybridboth": "run-p start:hybrid:**",
    "start:hybrid:instance1": "cds watch --profile hybrid-instance1",
    "start:hybrid:instance2": "cds watch --profile hybrid-instance2 --port 4005",
    "start:uaa": "NODE_ENV=dev-uaa cds run",
    "start:forExcel": "node srv/index.js",
    "build:deploy:start": "run-s build deploy start",
    "watch": "cds watch --with-mocks --in-memory",
    "watch:instance1": "cds watch --profile instance1",
    "watch:instance2": "cds watch --profile instance2 --port 4005",
    "watchboth": "run-p watch:**",
    "test": "jest",
    "test:hana": "CDS_ENV=hybrid cds bind --exec npm run test",
    "cf:uaa:update": "cf update-service bookshop-demo-uaa -c xs-security.json",
    "undeploy:xsa": "xs undeploy bookshop-demo --delete-services --delete-service-brokers",
    "undeploy:cf": "cf undeploy bookshop-demo --delete-service-keys --delete-services --delete-service-brokers"
  },
  "cds": {
    "drafts": {
      "cancellationTimeout": 1
    },
    "features": {
      "assert_integrity": "db"
    },
    "cdsc": {
      "variableReplacements": {
        "$user": {
          "directory": "A",
          "version": 1
        },
        "$session": {
          "version": "SESSION_CONTEXT('VERSION')"
        }
      }
    },
    "hana": {
      "deploy-format": "hdbtable"
    },
    "requires": {
      "destination": {
        "kind": "rest",
        "credentials": {
          "destination": "bookshop-demo-destination",
          "requestTimeout": 30000
        }
      },
      "CMISdocumentRepository": {
        "kind": "rest",
        "credentials": {
          "destination": "CMISdocumentRepository",
          "requestTimeout": 30000
        }
      },
      "GWSAMPLE_BASIC": {
        "kind": "odata-v2",
        "model": "srv/external/GWSAMPLE_BASIC",
        "credentials": {
          "destination": "ES5",
          "requestTimeout": 30000,
          "path": "/sap/opu/odata/iwbep/GWSAMPLE_BASIC"
        }
      },
      "ZPDCDS_SRV": {
        "kind": "odata-v2",
        "model": "srv/external/ZPDCDS_SRV",
        "credentials": {
          "destination": "ES5",
          "requestTimeout": 30000,
          "path": "/sap/opu/odata/sap/ZPDCDS_SRV"
        }
      },
      "ZSOCDS_SRV": {
        "kind": "odata-v2",
        "model": "srv/external/ZSOCDS_SRV",
        "credentials": {
          "destination": "ES5",
          "requestTimeout": 30000,
          "path": "/sap/opu/odata/sap/ZSOCDS_SRV"
        }
      },
      "xsuaa-api": {
        "kind": "rest",
        "credentials": {
          "destination": "bookshop-demo-uaa-apiaccess",
          "requestTimeout": 30000
        }
      },
      "CloudFoundryAPI": {
        "kind": "rest",
        "credentials": {
          "destination": "CloudFoundryAPI",
          "requestTimeout": 30000
        }
      },
      "flow": {
        "kind": "rest",
        "credentials": {
          "destination": "flow",
          "requestTimeout": 30000
        }
      },
      "API_CV_ATTACHMENT_SRV": {
        "kind": "odata-v2",
        "model": "srv/external/API_CV_ATTACHMENT_SRV"
      },
      "db": {
        "kind": "sqlite",
        "model": [
          "db",
          "srv"
        ]
      },
      "db-ext": {
        "[hybrid-instance1]": {
          "model": [
            "db-hana",
            "srv-hana"
          ]
        },
        "[hybrid-instance2]": {
          "model": [
            "db-hana",
            "srv-hana"
          ]
        },
        "[hybrid]": {
          "model": [
            "db-hana",
            "srv-hana"
          ]
        },
        "[production]": {
          "model": [
            "db-hana",
            "srv-hana"
          ]
        }
      }
    },
    "[dev-uaa]": {
      "requires": {
        "auth": {
          "kind": "xsuaa"
        }
      }
    },
    "[hybrid]": {
      "requires": {
        "db": {
          "kind": "hana"
        }
      }
    },
    "[production]": {
      "requires": {
        "db": {
          "kind": "hana"
        },
        "auth": {
          "kind": "xsuaa"
        }
      }
    },
    "odata": {
      "version": "v4"
    }
  }
}
