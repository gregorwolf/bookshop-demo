ID: bookshop-demo
_schema-version: 3.2.0
version: 0.0.1
parameters:
  enable-parallel-deployments: true

build-parameters:
  before-all:
    - builder: custom
      commands:
        - npm install --production
        - npx cds build --production
        # Delete node_modules to avoid maximum file length exceeded
        - rm -rf app/node_modules
        # Standalone OData V2 Proxy is disabled
        # - npm run build:copycsntoproxy

modules:
  - name: bookshop-demo-db
    type: hdb
    path: gen/db
    build-parameters:
      ignore: ["node_modules/"]
    parameters:
      memory: 256M
      disk-quota: 256M
      stack: cflinuxfs4
    requires:
      - name: bookshop-demo-db-service
  - name: bookshop-demo-srv
    type: nodejs
    path: gen/srv
    build-parameters:
      # When using OpenTelemetry@SAP the following line is not needed
      #ignore: ["node_modules/"]
    properties:
      SAP_JWT_TRUST_ACL: '[{"clientid":"*","identityzone":"*"}]'
      SAP_CALM_SERVICE_NAME: bookshop-demo
      SAP_CALM_SERVICE_TYPE: SAP_CP_CF
      OTEL_RESOURCE_ATTRIBUTES: sap.tenancy.tenant_id=85d309ba-f66d-4775-b927-9a95dfc89a1e
      NODE_ARGS: -r @sap/xotel-agent-ext-js/dist/common/tracer
    parameters:
      memory: 256M
      disk-quota: 1024M
      stack: cflinuxfs4
    provides:
      - name: srv_api
        properties:
          url: ${default-url}
    requires:
      - name: bookshop-demo-destination-service
      - name: bookshop-demo-connectivity-service
      - name: bookshop-demo-db-service
      - name: bookshop-demo-uaa
      - name: bookshop-demo-job-scheduler
        parameters:
          config:
            xsuaa_instance_name: bookshop-demo-uaa
      - name: bookshop-demo-logging
      #      - name: bookshop-demo-cloud-logging
      - name: bookshop-demo-autoscaler
        parameters:
          path: ./autoscaler.json
  - name: bookshop-demo-api-sb
    # ------------------------------------------------------------
    type: nodejs
    path: broker/
    build-parameters:
      builder: npm-ci
      ignore: ["node_modules/", "default-*.json"]
    parameters:
      app-name: bookshop-demo-api-sb-${space}
      memory: 64MB
      disk-quota: 1024MB
    properties:
      SBF_BROKER_CREDENTIALS_HASH: >
        {
          "broker-user": "<is replaced by config in mtaext>"
        }
    requires:
      - name: bookshop-demo-uaa
      - name: srv_api
        properties:
          SBF_SERVICE_CONFIG:
            bookshop-demo-api:
              extend_credentials:
                shared:
                  apiUrl: ~{url}
              extend_xssecurity:
                per_plan:
                  default:
                    authorities:
                      - $XSAPPNAME.admin
              extend_catalog:
                metadata:
                  displayName: Bookshop API ${space}
          SBF_ENABLE_AUDITLOG: false
    provides:
      - name: bookshop-demo-api-sb-srv
        properties:
          app-name: ${app-name}
          srv-url: ${default-url}
  - name: bookshop-demo-destination-content-deployer
    type: com.sap.application.content
    build-parameters:
      no-source: true
    parameters:
      content:
        subaccount:
          destinations:
            - Name: bookshop-demo-uaa-apiaccess
              Authentication: OAuth2ClientCredentials
              ServiceInstanceName: bookshop-demo-uaa-apiaccess
              ServiceKeyName: bookshop-demo-uaa-apiaccess-key
              sap.cloud.service: bookshop.demo.service
            - Name: bookshop-demo-repo-host
              ServiceInstanceName: bookshop-demo-repo-host
              ServiceKeyName: bookshop-demo-repo-host-key
              sap.cloud.service: bookshop.demo.service
            - Name: bookshop-demo-uaa
              Authentication: OAuth2UserTokenExchange
              ServiceInstanceName: bookshop-demo-uaa
              ServiceKeyName: bookshop-demo-uaa-key
              sap.cloud.service: bookshop.demo.service
            - Name: bookshop-demo
              Description: CAP backend service
              Authentication: OAuth2UserTokenExchange
              ServiceInstanceName: bookshop-demo-uaa
              ServiceKeyName: bookshop-demo-uaa-key
              URL: ~{srv_api/url}
              HTML5.DynamicDestination: true
              timeout: 600000
          #            - Name: bookshop-demo-docx
          #              Authentication: OAuth2ClientCredentials
          #              ServiceInstanceName: bookshop-demo-docx
          #              ServiceKeyName: bookshop-demo-docx-key
          # Currently fails with:
          # [ERROR] Destinations to service [destination] are not supported
          #            - Name: bookshop-demo-destination
          #              Authentication: OAuth2ClientCredentials
          #              ServiceInstanceName: bookshop-demo-destination-service
          #              ServiceKeyName: bookshop-demo-destination-service-key
          #              sap.cloud.service: basic.service
          existing_destinations_policy: update
    requires:
      - name: bookshop-demo-uaa
        parameters:
          service-key:
            name: bookshop-demo-uaa-key
      - name: bookshop-demo-repo-host
        parameters:
          service-key:
            name: bookshop-demo-repo-host-key
      - name: srv_api
      - name: bookshop-demo-destination-service
        parameters:
          content-target: true
      #          service-key:
      #            name: bookshop-demo-destination-service-key
      - name: bookshop-demo-uaa-apiaccess
        parameters:
          service-key:
            name: bookshop-demo-uaa-apiaccess-key
  #      - name: bookshop-demo-docx
  #        parameters:
  #          service-key:
  #            name: bookshop-demo-docx-key
  #  - name: bookshop-demo-v2-proxy
  #    type: nodejs
  #    path: standalone-v2-proxy
  #    build-parameters:
  #      ignore: ["node_modules/"]
  #    parameters:
  #      memory: 128M
  #      disk-quota: 1024M
  #    provides:
  #      - name: srv_api_v2
  #        properties:
  #          url: '${default-url}'
  #    requires:
  #      - name: srv_api
  #        properties:
  #          srv_api_url: ~{url}

  # - name: bookshop-demo-app
  #   type: nodejs
  #   path: app
  #   build-parameters:
  #     ignore: ["node_modules/"]
  #   parameters:
  #     memory: 256M
  #     disk-quota: 1024M
  #   requires:
  #    - name: bookshop-demo-uaa
  #    - name: srv_api
  #      group: destinations
  #      properties:
  #         forwardAuthToken: true
  #         strictSSL: false
  #         name: srv_api
  #         url: ~{url}
  #    - name: srv_api_v2
  #      group: destinations
  #      properties:
  #         forwardAuthToken: true
  #         strictSSL: false
  #         name: srv_api_v2
  #         url: ~{url}

  - name: bookshop-demo-ui
    type: approuter.nodejs
    path: approuter
    parameters:
      memory: 256M
      disk-quota: 1024M
      stack: cflinuxfs4
    build-parameters:
      ignore: ["node_modules/"]
    requires:
      #      - name: bookshop-demo-ui5-flexibility-keyuser
      - name: bookshop-demo-destination-service
      - name: bookshop-demo-connectivity-service
      - name: bookshop-demo-uaa
      - name: bookshop-demo-logging
      #      - name: bookshop-demo-cloud-logging
      - name: bookshop-demo-repo-runtime
      - name: srv_api
        group: destinations
        properties:
          forwardAuthToken: true
          strictSSL: false
          name: srv_api
          url: ~{url}
  - name: bookshop-demo-deployer
    type: com.sap.application.content
    path: .
    requires:
      - name: bookshop-demo-repo-host
        parameters:
          content-target: true
    build-parameters:
      build-result: resources
      requires:
        - artifacts:
            - HTML5Module-content.zip
          name: bookshop-demo-HTML5Module
          target-path: resources/
  - name: bookshop-demo-HTML5Module
    type: html5
    path: app
    build-parameters:
      ignore: ["node_modules/"]
      builder: custom
      commands:
        - npm run build
      supported-platforms: []

resources:
  - name: bookshop-demo-db-service
    type: com.sap.xs.hdi-container
    properties:
      hdi-container-name: ${service-name}
  - name: bookshop-demo-uaa
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: broker
      path: ./xs-security.json
  - name: bookshop-demo-uaa-apiaccess
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: apiaccess
  #  - name: bookshop-demo-docx
  #    type: org.cloudfoundry.managed-service
  #    parameters:
  #      service: document-information-extraction-trial
  #      service-plan: default
  - name: bookshop-demo-destination-service
    parameters:
      service-plan: lite
      service: destination
    type: org.cloudfoundry.managed-service
  - name: bookshop-demo-connectivity-service
    parameters:
      service-plan: lite
      service: connectivity
    type: org.cloudfoundry.managed-service
  - name: bookshop-demo-repo-host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-host
  - name: bookshop-demo-repo-runtime
    type: org.cloudfoundry.managed-service
    parameters:
      service-plan: app-runtime
      service: html5-apps-repo
  - name: bookshop-demo-job-scheduler
    type: org.cloudfoundry.managed-service
    parameters:
      service: jobscheduler
      service-plan: lite
      config:
        enable-xsuaa-support: true
  - name: bookshop-demo-logging
    type: org.cloudfoundry.managed-service
    parameters:
      service: application-logs
      service-plan: lite
  #  - name: bookshop-demo-cloud-logging
  #    type: org.cloudfoundry.managed-service
  #    parameters:
  #      service: cloud-logging
  #      service-plan: dev
  - name: bookshop-demo-autoscaler
    type: org.cloudfoundry.managed-service
    parameters:
      service: autoscaler
      service-plan: standard
#  - name: bookshop-demo-ui5-flexibility-keyuser
#    type: org.cloudfoundry.managed-service
#    parameters:
#      service: ui5-flexibility-keyuser
#      service-plan: free
